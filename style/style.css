/* 
##############
Z-INDEX LAYERS 
##############
--- debug layer = 100,000
--- debug-fps
.TextDisplay = 30,000
.drag_ghost = 20,000
.Crosshair = 15,000
.StructureDetailDisplay = 15,000
.ExternalInventoryDisplay = 14,000
.PlayerHand = 14,000
---- world layer max: 9999
.Vignette = 9999
.LightCanvas = 6,000
.TileBoard = 5,000

*/

@font-face {
  font-family: 'Raleway Light';
  font-weight: 400;
  src: url("../resources/fonts/Raleway.ttf");
}
@font-face {
  font-family: 'Raleway Black';
  font-weight: 1000;
  src: url("../resources/fonts/Raleway.ttf");
}
@font-face {
  font-family: 'Raleway Bold';
  font-weight: 700;
  src: url("../resources/fonts/Raleway.ttf");
}
@font-face {
  font-family: 'Raleway Heavy';
  font-weight: 1000;
  src: url("../resources/fonts/Raleway.ttf");
}
@font-face {
  font-family: 'Rubik';
  font-weight: 400;
  src: url("../resources/fonts/Rubik.ttf");
}
@font-face {
  font-family: 'Overpass';
  font-weight: 400;
  src: url("../resources/fonts/Overpass.ttf");
}
@font-face {
  font-family: 'Overpass Heavy';
  font-weight: 700;
  src: url("../resources/fonts/Overpass.ttf");
}
:root {
  --bg-main: #1F3042;
  --bg-accent: rgb(15, 23, 31);
  --bg-white: #deebee;
  --bg-accent-light: #99acbe75;
  --bg-accent-translucent: rgba(23, 35, 48, 0.6);
  --bg-inventory: rgb(35, 31, 57);
  --bg-shadow: rgba(15, 0, 30, 0.6);
  --bg-shadow-red: rgba(100, 32, 56, 0.6);
  --color-harvest: #2FD5AA;
  --color-energy: #8753c3;
  --color-energy-complement: #db4885;
  --color-water: #94e6ff;
  --color-water-complement: #6b4afc;
  --color-fire: #ff4664;
  --color-fire-complement: #ffce46;
  /* --color-item: #bea0ca; */
  --color-light: #ffd864;
  --color-light-complement: rgb(255, 252, 236);
  --color-text: rgb(230,230,230);
  --color-item: #6798c0;
  --color-darkness: #714688;
  --color-dark: #69666f;
  --color-text-accent: rgb(200, 200, 200);
  --card-width: 130px; /*default calc(var(--card-height) * 0.70)*/
  --card-height: 170px; /*default 200px, rougly 20vh*/
  --tile-width:150px;
  --tile-height:150px;
}
/*###########
TAG SELECTORS
###########*/
* {
  margin: 0;
  font-family: "Overpass";
  font-size:15px;
}
body {
  user-select:none;
  margin: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-image: linear-gradient(rgba(0,0,0,0.3) 0%,rgba(0,0,0,0.3) 100%), url("../resources/img/void-bg.png");
  background-size: cover;
  background-position: center;
  overflow-anchor: none;
}
.blackFont {
  font-family: "Overpass";
  font-weight: 1000;
}
h1, h2, h3, h4, .headerFont {
  font-family: "Raleway Bold";
}
.headerFont-thin {
  font-family: "Raleway Light";
  font-weight: 100;
}
.normalFont {
  font-size:1em;
  font-family: Overpass;
}
p, span {
  font-size:1.2em;
  color: var(--color-text);
  font-family: Overpass;
}
hr {
  margin-left: 0;
  margin-right: 0;
}
body *.hidden {
  display: none;
}
.invis {
  opacity: 0;
}
.accentText {
  color: var(--color-text-accent);
}
.stylizedText:before {
  content: "ðŸ™¢";
  display: inline-block;
  margin-right: 5px;
  color: var(--color-text-accent);
}
.stylizedText:after {
  content: "ðŸ™ ";
  display: inline-block;
  margin-left: 5px;
  color: var(--color-text-accent);
}
/*###############
GENERAL SELECTORS
###############*/
.fillWindow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}
.fillWidth {
  width: 100%;
}
.flex {
  display: flex;
}
.flex-centered {
  display: flex;
  justify-content: center;
  align-items: center;
}
.flex-column {
  display: flex;
  flex-direction: column;
}
.flex-row {
  display: flex;
  flex-direction: row;
}
.flex-break {
  flex-basis: 100%;
  height: 0;
}
.txt-lined:before, .txt-lined:after {
  --margin:8px;
  letter-spacing:-3px;
  color:white;
  opacity:0.5;
}
.txt-lined:not(.txt-lined-after):before {
  content:"- â€“ â€” â€”â€”";
  margin-right:calc(3px + var(--margin));
}
.txt-lined:after, .txt-lined-after:after {
  content:"â€”â€” â€” â€“ -";
  margin-left:var(--margin);
}
.txt-size-header {
  font-size:1.6em;
}
.txt-white {
  color: white;
}
.txt-harvest {
  color: var(--color-harvest);
}
.txt-italic {
  font-style: italic;
}
.pos-absolute {
  position:absolute;
}
.centered-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
}
.hidden {
  display:none;
}
/*############
CARD SELECTORS
############*/
.inventoryParent {
  position:absolute;
  width:fit-content;
  height:var(--card-height);
  display:flex;
  justify-content:center;
  padding:0 calc(var(--card-width) * 0.5);
  transition:0.3s;
}
.inventory {
  display:flex;
  /* width:100%; */
  /* overflow:hidden;
  justify-content:center; */
}
.ExternalInventoryContainer {
  position:absolute;
  left:50%; 
  transform:translatex(-50%);
  z-index:14000;
  bottom:100%;
  transition:opacity 0.2s,padding-right 0.3s;
  padding-right:400px;
}
.ExternalInventoryContainer.state-StructureDetailDisplay-vanished {
  padding-right:0;
}
.ExternalInventoryContainer .inventoryParent {
  position:relative;
  padding-top:40px;
  translate:0 40%;
  transition:translate 0.2s, opacity 0.2s;
  opacity:1;
}
.ExternalInventoryContainer .inventoryParent:hover {
  translate:0 100%;
}
.ExternalInventoryContainer.state-hidden {
  opacity:0;
  transform:translate(-50%,0%);
}
.inventory-bg {
  --rotation:180deg;
  z-index:-1;
  width:100%;
  height:100%;
  position:absolute;
  top:0;
  left:0;
  filter:drop-shadow(0 0 10px var(--bg-accent));
  background:linear-gradient(var(--rotation), var(--bg-inventory) 0%, transparent 100%);
  translate:0 calc(20%);
  transition:translate 0.2s;
}
.ExternalInventoryContainer .inventoryParent:hover .inventory-bg {
  translate:0 0;
}
body:not(.dragging) .ExternalInventoryContainer .inventory-bg:hover {
  background:linear-gradient(var(--rotation), var(--bg-shadow-red) 0%, transparent 100%);
}
body.dragging .inventory-bg:hover {
  background:linear-gradient(var(--rotation), var(--bg-accent-light) 0%, transparent 100%);
}
.ExternalInventoryContainer .inventoryTitle {
  position:absolute;
  display:block;
  top:5px;
  left:50%;
  transform:translatex(-50%);
  color:white;
  white-space:nowrap;
  pointer-events:none;
  user-select:none;
  translate:0 calc(var(--card-height) + 40px);
  transition:translate 0.2s;
}
.ExternalInventoryContainer .inventoryParent:hover > .inventoryTitle {
  translate:0 0;
}
.ExternalInventoryContainer * {
  pointer-events:all;
}
.PlayerHandContainer { 
  bottom:10px;
  padding-top:0px;
  z-index:14000;
}
.PlayerHandContainer .inventory-bg {
  --rotation:0deg;
  top:-20px;
  padding-top:20px;
  padding-bottom:10px;
}
.PlayerHand * {
  pointer-events:all;
}
.inventory .card {
  transform:none;
  position:relative;
  margin-left:5px;
  margin-right:5px;
}
.card {
  --x:0;
  --y:0;
  width:var(--card-width);
  min-width:var(--card-width);
  height: var(--card-height);
  position: absolute;
  user-select: none;
  /* transition: 0.2s; //doesnt work??? */
  border-radius: 10px;
  z-index:1;
  transform:translate(
    calc(-50% + var(--x) * (var(--card-width) + 10px)),
    calc(-50% + var(--y) * (var(--card-height) + 10px)));
}
.card * {
  pointer-events:none;
}
body .card:active {
  filter: brightness(1.5);
}
.card:hover {
  filter: brightness(1.2);
  z-index:100;
}
.card:hover .card-bg {
  filter: drop-shadow(0 0 20px var(--bg));
}
.card.onCooldown {
  opacity:0.6;
}
.card.onCooldown::before {
  --border-width-internal: calc(var(--border-width) * 0.5);
  border-radius: calc(var(--border-radius) * 0.8);
}
.card-content {
  z-index: 10;
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  box-sizing: border-box;
  border-radius: 10px;
}
.cards-titleDown .card .card-content {
  flex-direction:column-reverse;
}
.cards-titleDown .card-title-container {
  position:relative;
  top:-10px;
}
.card-img-container {
  flex-grow:1;
  height:100%;
  width:100%;
  border:10px solid transparent;
  box-sizing:border-box;
  background: var(--image);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  filter:drop-shadow(0 0 10px var(--bg-accent));
  pointer-events:none;
}
.card.castable .card-img-container {
  background-position: bottom;
  transform:scale(1.5) translatey(-15%);
  filter:drop-shadow(0 0 10px var(--bg-accent))
  drop-shadow(0 10px 10px var(--bg-accent));
  margin-top:-15px;
  margin-bottom:-15px;
}
.card-title-container {
  z-index:1;
  margin-bottom:-5px;
  padding: 0 7px;
  border-bottom-left-radius:10px;
  border-bottom-right-radius:10px;
  /* background-image: linear-gradient(180deg, transparent 0%, var(--bg-main) 60%); */
}
.card.darkness {
  z-index:0;
}
.card.darkness .card-title-container {
  display:none;
}
.card-title {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  transition:0.3s;
  margin-top:8px;
}
.card-title * {
  flex-grow: 1;
  text-align: center;
  line-height:1em;
}
.card-title .card-title-char {
  font-size:1.6em;
  color:var(--bg);
}
.card.castable .card-title .card-title-char {
  color:var(--color-text);
}
.card.darkness .card-title .card-title-char {
  color:var(--color-dark);
}
.card-title .card-subtitle-char, .card-title .card-supertitle-char {
  color: var(--color-text);
  font-size: 1em;
  max-width:1.3em;
}
/* .card-desc {
  position:absolute;
  bottom:calc(100% - 10px);
  width:100%;
  color:var(--color-text);
  word-wrap: break-word;
  word-break: break-word;
  text-align: center;
  font-style:italic;
  transition:0.3s;
  opacity:0;
  filter:drop-shadow(0 0 15px var(--bg-shadow));
  user-select:none;
  pointer-events:none;
} */
.card:hover .card-desc {
  opacity:1;
  bottom:calc(100% + 10px);
}
.card-bg {
  width:100%;
  height:100%;
  position:absolute;
  left:0;
  bottom:0;
  overflow: hidden;
  border-radius: 10px;
  background-color:var(--bg-accent-translucent);
}
.card.drag_ghost .card-bg {
  background-color:transparent;
}
.card-bg::before {
  content:"";
  display:block;
  width:100%;
  height:100%;
  position:absolute;
  left:0;
  top:0;
  background-color:var(--bg);
  opacity:0.3;
}
/* .card.castable .card-bg {
  height:30%;
}
.card.darkness .card-bg::before {
  opacity:0 !important;
}
.card.castable .card-bg::before {
  opacity:0 !important;
}
.card.darkness .card-bg-circle {
  --finalDiameter:calc(120% - 30% * var(--index));
  margin-top:0;
} */
.card-bg .card-bg-circle {
  --finalDiameter:calc(100% - 20% * var(--index));
  width:var(--finalDiameter);
  aspect-ratio:1 / 1;
  position:absolute;
  top:50%;
  left:50%;
  transform:translate(-50%, -50%);
  margin-top:20px;
  background-color:var(--bg);
  border-radius:10000px;
  opacity:0.1;
}
.cards-titleDown .card-bg .card-bg-circle {
  margin-top:-10px;
}
/*####################
MISC SELECTORS
####################*/
.Crosshair {
  pointer-events:none;
  z-index:15000;
  color:white;
  font-size:30px;
  position:absolute;
  left:50%;
  top:50%;
  transform:translate(-50%,calc(-50% - 10px));
}
/*####################
DRAG SELECTORS
####################*/
.drag_ghost {
  position:absolute;
  transform:translate(calc(-50% + var(--drag-left)),calc(-50% + var(--drag-top)));
  z-index:20000 !important;
  opacity:0.3;
  pointer-events:none;
  box-shadow:0 10px 30px var(--bg-accent);
}
.drag_ghost.state-vanished {
  transform:translate(-50%,-50%) scale(0);
}
.card.drag_ghost .card-desc {
  display:none;
}
/*############
TILE SELECTORS
############*/
.TileBoard {
  position:absolute;
  width:100vw;
  height:100vh;
  top:50%;
  left:50%;
  z-index:0;
  filter:drop-shadow(0 20px 20px var(--bg-accent));
  transform:translate(calc(var(--x) * 1px),calc(var(--y) * 1px));
  transition:transform 0.1s;
}
.tile {
  --margin-width:0px;
  --tile-thickness:20px;
  --x:0;
  --y:0;
  width:calc(var(--tile-width) - var(--margin-width));
  height:calc(var(--tile-height) - var(--margin-width));
  position:absolute;
  transform:translate(calc(-50% + var(--x) * var(--tile-width)),calc(-50% - var(--y) * var(--tile-height)));
  --color:#676271;
  border-radius:10px;
  box-sizing:border-box;
  background-color:transparent;
  box-shadow:0 calc(var(--tile-thickness)) 0 var(--shadow);
  z-index:calc(var(--y) * -2);
  user-select:none;
  transition:0.1s;
}
.tile.hasItems:before {
  display:block;
  position:absolute;
  content:"";
  width:calc(var(--tile-width) * 0.8);
  height:calc(var(--tile-height) * 0.8);
  box-sizing:border-box;
  border:9px solid var(--bg-main);
  border-radius:1000px;
  z-index:1;
  left:50%;
  opacity:0.5;
  top:50%;
  transform:translate(-50%,-60%);
  /* transform:translate(calc(-50% + var(--x) * var(--tile-width)),calc(-50% - var(--y) * var(--tile-height) - 10px)); */
}
.tile .structureSprite {
  --rand-x-offset:0px;
  --rand-y-offset:0px;
  position:absolute;
  left:50%;
  z-index:1;
  top:0%;
  user-select:none;
  pointer-events:none;
  transform:translate(calc(-50% + var(--rand-x-offset)),calc(-50% + var(--rand-y-offset)));
  max-width:200px;
  filter:drop-shadow(5px 5px 10px rgba(0,0,0,0.5));
}
.tile .tileSprite {
  --rand-x-offset:0px;
  --rand-y-offset:0px;
  position:absolute;
  z-index:0;
  left:50%;
  top:50%;
  user-select:none;
  pointer-events:none;
  transform:translate(calc(-50% + var(--rand-x-offset)),calc(-50% + var(--rand-y-offset)));
}
.tile .tileSprite.flipped, .tile .structureSprite.flipped {
  transform:scaleX(-1) translate(calc(50% + var(--rand-x-offset)),calc(-50% + var(--rand-y-offset)));
}
/* .tile:after {
  content:"";
  display:block;
  position:absolute;
  top:calc(-20px + var(--tile-thickness));
  left:-20px;
  width:calc(100% + 40px);
  height:calc(100% + 40px);
} */
.tile:hover, .tile.selectedTile {
  transform:translate(calc(-50% + var(--x) * var(--tile-width)),calc(-50% - var(--y) * var(--tile-height) - 10px));
  filter:brightness(1.3);
  z-index:calc(var(--y) * -2 + 1);
}
.tile:active, .tile.selectedTile {
  animation:0.5s forwards flash;
}
.tile.grass {
  --color:#2C4944;
}
.tile.forest {
  --color:#1A4122;
}
/*####################
LOG SELECTORS
####################*/
.textDisplay {
  pointer-events:none;
  text-align:center;
  z-index:30000;
  transform:translatey(calc((var(--tile-height) * 0.8) * -1));
}
.PlayerTextDisplay p {
  filter:drop-shadow(4px 1px 2px rgb(198, 32, 74)) drop-shadow(-4px -1px 2px rgb(29, 45, 187)) drop-shadow(0 0 10px var(--bg-shadow));
}
.FollowCursorTextDisplay p {
  filter:drop-shadow(0 0 10px var(--bg-shadow));
}
@keyframes log-fadeInOut {
  0% {
    opacity:0;
    transform:translatey(5px);
  }
  10% {
    opacity:1;
    transform:translatey(0px);
  }
  55% {
    opacity:1;
    transform:translatey(-5px);
  }
  100% {
    opacity:0;
    transform:translatey(-10px);
  }
}
@keyframes log-fadeInOut-cursor {
  0% {
    opacity:1;
    transform:translatey(-10px);
  }
  30% {
    opacity:1;
  }
  100% {
    opacity:0;
    transform:translatey(-80px);
  }
}
.textDisplay p {
  --log-persistence:15000ms;
  opacity:0;
  transform:translatey(10px);
  animation:var(--log-persistence) forwards log-fadeInOut;
}
.textDisplay p.log-center {
  filter:drop-shadow(0 0 5px red);
}
.textDisplay p.log-cursor {
  animation:var(--log-persistence) linear forwards log-fadeInOut-cursor;
}
.textDisplay p.log-cursor > span {
  opacity:1;
  animation:none;
  /* animation:0.4s calc(var(--mod-index) * 0.1s) infinite linear alternate-reverse shake; */
            /* 1s calc(var(--rand) * 1s) infinite linear alternate wobble, */
            /* 0.15s forwards log-opaque; */
}
@keyframes log-opaque {
  100% {
    opacity:1;
  }
}
.textDisplay p > span {
  --x-shake:0;
  --y-shake:0;
  --y-wobble:0;
  opacity:0.3;
  animation:1s calc(var(--mod-index) * 0.1s) infinite linear alternate-reverse shake,
            0.4s calc(var(--index) * 0.05s) forwards log-opaque;
  display:inline-block;
  translate:calc(var(--x-shake) * 0.5px) calc(var(--y-shake) * 0.5px);
  white-space:pre;
}
.FollowCursorTextDisplay {
  position:absolute;
  top:0;
  left:0;
}
.FollowCursorTextDisplay p {
  position:absolute;
  top:calc(var(--y) * 1px);
  left:calc(var(--x) * 1px);
  translate:-50% 400%;
  white-space:nowrap;
}
/*####################
STRUCTURE SELECTORS
####################*/
.StructureDetailDisplay {
  z-index:15000;
  position:absolute;
  top:20px;
  right:20px;
  translate:0px 0;
  /* transform:translate(calc((var(--x) * 1px) + (var(--tile-width) / 2)),calc((var(--y) * 1px) + (-50% - 20px))); */
  opacity:1;
  transition:translate 0.3s, opacity 0.3s;
  width:400px;
  background:linear-gradient(90deg, var(--bg-inventory) 0%, transparent 100%);
}
.StructureDetailDisplay .titleContainer:hover {
  background:linear-gradient(90deg, var(--bg-shadow-red) 0%, transparent 100%);
}
.StructureDetailDisplay.state-vanished {
  pointer-events:none;
  opacity:0;
  translate:20px 0;
}
.StructureDetailDisplay .titleContainer {
  padding:10px;
}
.StructureDetailDisplay .statContainer {
  padding:0 10px 10px 10px;
}
/* .StructureDetailDisplay .statContainer .flex-column:first-of-type .progressBar {
  border-radius:20px 0 0 20px;
}
.StructureDetailDisplay .statContainer .flex-column:last-of-type .progressBar {
  border-radius:0 20px 20px 0;
} */
.progressBarParent {
  --fill-color:var(--bg-accent-light);
  --fill-color-accent:var(--bg-white);
  display:flex;
  align-items:center;
  width:100%;
}
.progressBarParent > p {
  margin-left:auto;
  padding-left:20px;
  color:var(--fill-color);
}
.progressBar {
  --calc-width:calc(var(--fill-max) * 4px + 80px);
  width:clamp(10px,var(--calc-width),100%);
  height:30px;
  background-color:var(--bg-shadow);
  position:relative;
  border:3px solid var(--fill-color);
  box-sizing:border-box;
  border-radius:20px;
  padding-left:40px;
  margin:3px 0;
  transition:0.3s;
  display:flex;
  align-items:center;
  background-image:linear-gradient(120deg, transparent 50%, var(--bg-main) 100%);
}
.progressBar:hover {
  height:30px;
  width:100%;
}
.progressBar-icon-debug {
  position:absolute;
  width:24px;
  z-index:3;
  font-size:30px;
  height:24px;
  color:var(--fill-color-accent);
  line-height:24px;
  left:5px;
  top:4px;
}
.progressBar-icon {
  left:0;
  position:absolute;
  width:24px;
  height:24px;
  box-sizing:border-box;
  background-color:var(--fill-color-accent);
  border:3px solid var(--fill-color);
  border-radius:5px;
  top:calc(50% - 4.3px);
  transform:rotate(45deg) translatey(-50%);
  z-index:3;
  background-image:url("../resources/img/cards/resource/water.png");

}
.progressBar-title {
  z-index:2;
  color:var(--fill-color-accent);
  position:relative;
}
.progressBar-fill {
  --overflow-padding-combat:1px;
  border-radius:20px;
  position:absolute;
  z-index:1;
  top:calc(var(--overflow-padding-combat) * -1);
  left:calc(var(--overflow-padding-combat) * -1);
  height:calc(100% + var(--overflow-padding-combat) * 2);
  width:calc(var(--fill) / var(--fill-max) * 100% + var(--overflow-padding-combat));
  background-color:var(--fill-color);
  background-image:linear-gradient(90deg, transparent 50%, var(--fill-color-complement) 100%);
}
/*####################
MAGIC CIRCLE SELECTORS
####################*/
.MagicCircle {
  --circle-width:300px;
  --stroke-width:5px;
  --circle-color:var(--color-harvest);
  --color-selected:#F53E9A;
  --color-completed:var(--color-harvest-accent);
  --spin:360deg;
  position:absolute;
  z-index:100;
  border:var(--stroke-width) solid var(--circle-color);
  width:var(--circle-width);
  height:var(--circle-width);
  border-radius:var(--circle-width);
  transition:1.5s;
  opacity:1;
  filter:drop-shadow(0 0 5px var(--circle-color)) drop-shadow(0 0 20px var(--bg-accent)) drop-shadow(0 0 20px var(--bg-accent));
}
.MagicCircle.magicCircle-auxiliary {
  --aux-circle-extra:100px;
  --aux-circle-width:calc(var(--circle-width) + var(--aux-circle-extra));
  --transition:1s;
  --stroke-width:3px;
  width:var(--aux-circle-width);
  height:var(--aux-circle-width);
  border-radius:var(--aux-circle-width);
  transition:var(--transition) cubic-bezier(0.075, 0.82, 0.165, 1), opacity 0s;
  opacity:0.7;
  filter:hue-rotate(20deg);
  z-index:-1;
  pointer-events:none;
  --flicker-min:0.4;
  --flicker-max:0.7;
  --flicker-delay:0s;
  animation:10s var(--flicker-delay) flicker infinite alternate;
}
/* .MagicCircle.magicCircle-auxiliary.oscillate {
  --oscillation-max:50px;
  --oscillation-duration:10s;
  animation:var(--oscillation-duration) magicCircle-auxillary-oscillate infinite alternate;
} */
.MagicCircle.magicCircle-progress {
  --stroke-width:0;
  overflow:hidden;
  z-index:-1;
}
.MagicCircle.magicCircle-progress .magicCircle-progress-fill {
  top:calc(100% - (var(--runes-completed) / var(--total-runes)) * 100%);
  width:100%;
  height:100%;
  opacity:0.1;
  background-color:var(--circle-color);
  transition-duration:1s;
  position:absolute;
}
.MagicCircle .magicCircle-rune {
  /* should have a unique fontstyle depending on the kind of rune */
  --rune-diameter:60px;
  --rotation:calc(var(--index) * (360 / var(--total-runes)) * 1deg);
  --color:var(--color-selected);
  font-size:25px;
  color:white; 
  padding:10px;
  border:var(--stroke-width) solid var(--circle-color);
  background-color:var(--bg-main);
  border-radius:1000px;
  width:var(--rune-diameter);
  height:var(--rune-diameter);
  line-height:calc(var(--rune-diameter) - 23px);
  text-align:center;
  box-sizing:border-box;
  position:absolute;
  left:calc(50% - var(--rune-diameter) / 2);
  top:calc(50% - var(--rune-diameter) / 2);
  transition:1.5s;
  user-select:none;
  filter:drop-shadow(0 0 5px black);
  transform:rotate(var(--rotation)) translatey(calc(var(--circle-width) / -2)); /*rotate(calc(var(--rotation) * -1));*/
}
.MagicCircle .magicCircle-rune.state-selected {
  --color:var(--color-selected);
  border:var(--stroke-width) solid var(--color);
  transition:0.1s border, 1.5s;
  filter:drop-shadow(0 0 5px black);
}
.MagicCircle .magicCircle-rune.state-completed {
  --color:var(--color-completed);
  transition:3s;
  border:var(--stroke-width) solid var(--color);
  opacity:0.8;
}
.MagicCircle .magicCircle-rune.state-failed {
  --color:var(--circle-color);
  transition:3s;
  border:var(--stroke-width) solid var(--color);
  opacity:0.8;
  filter:blur(1px);
  color:transparent;
}
.MagicCircle .magicCircle-rune:before {
  --stroke-width:3px;
  border:var(--stroke-width) solid var(--color);
  content:"";
  display:block;
  position:absolute;
  left:50%;
  top:50%;
  transform:translate(-50%,-50%);
  width:calc(var(--rune-diameter) * 0.9);
  height:calc(var(--rune-diameter) * 0.9);
  border-radius:1000px;
  transition:0.3s;
  opacity:0;
  filter:hue-rotate(0deg);
}
.MagicCircle .magicCircle-rune.state-selected:before {
  width:calc(var(--rune-diameter) * 1.7);
  height:calc(var(--rune-diameter) * 1.7);
  opacity:0.8;
}
.MagicCircle .magicCircle-rune.state-completed:before {
  --color:var(--color-completed);
  transition:0.5s;
  width:calc(var(--rune-diameter) * 5);
  height:calc(var(--rune-diameter) * 5);
  border:var(--stroke-width) solid var(--color);
  filter:drop-shadow(0 0 5px transparent) hue-rotate(360deg);
  opacity:0;
}
.MagicCircle .magicCircle-rune.state-failed:before {
  transition:3s;
  width:calc(var(--rune-diameter) * 1.5);
  height:calc(var(--rune-diameter) * 1.5);
  border:var(--stroke-width) solid var(--color);
  filter:drop-shadow(0 0 5px transparent);
  opacity:0;
}
.MagicCircle.state-initial {
  transition:0s;
}
.MagicCircle.state-initial .magicCircle-auxiliary {
  transition:0s;
}
.MagicCircle.state-initial .magicCircle-rune {
  transition:0s;
}
.MagicCircle.state-vanished {
  --circle-width:0px;
  opacity:0;
  pointer-events:none;
  filter:drop-shadow(0 0 0 var(--circle-color)) drop-shadow(0 0 20px var(--color-color)) drop-shadow(0 0 10px var(--color-flame));
}
.MagicCircle.state-vanished .magicCircle-auxiliary {
  --aux-circle-width:0px !important;
}
.MagicCircle.state-vanished .magicCircle-rune {
  transform:rotate(calc(var(--rotation) + var(--spin))) translatey(calc(var(--circle-width) / -2)) rotate(calc(var(--rotation) * -1 - var(--spin)));
}
.MagicCircle.state-vanished .MagicCircle.magicCircle-progress .magicCircle-progress-fill {
  transition:0.5s;
  opacity:0;
}
.MagicCircle .magicCircle-rune-graphic {
  box-shadow:0 0 3px black;
}
.MagicCircle .magicCircle-rune-graphic .circle {
  --diameter:var(--rune-diameter);
  --top:0;
  --left:0;
  top:calc(50% + var(--top) * 1%);
  left:calc(50% + var(--left) * 1%);
  position:absolute;
  border:solid;
  border-width:var(--stroke-width);
  border-color:var(--color);
  box-sizing:border-box;
  transform:translate(-50%,-50%);
}
.MagicCircle .magicCircle-rune-graphic .circle.solid {
  --bg-color:var(--color);
  background-color:var(--bg-color);
}
.MagicCircle .magicCircle-rune-graphic .line {
  --length:100;
  --width:var(--stroke-width);
  --rotation:0deg;
  top:50%;
  left:50%;
  position:absolute;
  width:calc(var(--length) * 1%);
  height:var(--width);
  background-color:var(--color);
  border-radius:10000px;
  box-sizing:border-box;
  transform:translate(-50%,-50%) rotate(var(--rotation));
}
.circle {
  --diameter:50px;
  width:var(--diameter);
  height:var(--diameter);
  border-radius:10000px;
}
/*#############
LIGHT SELECTORS
#############*/
.Vignette {
  background-image:url("../resources/img/light-gradient.png");
  background-size:100%;
  background-position:center;
  opacity:0.3;
  pointer-events:none;
  user-select:none;
  z-index:9999;
}
.LightCanvasContainer {
  z-index:6000;
  pointer-events:none;
  user-select:none;
}
.LightCanvasContainer canvas {
  width:100%;
  height:100%;
}
/*###########
DEBUG SELECTORS
###########*/
.draggable {
}
.debug-fps {
  position:absolute;
  top:20px;
  left:20px;
  color:var(--color-harvest);
  font-size:30px;
  z-index:100000;
  opacity:0.3;
}
.debug-dot {
  width:0;
  height:0;
  position:absolute;
  transform:translate(-50%,-50%); 
  border-radius:100px;
  z-index:100000;
  border:7px solid red;
  pointer-events:none;
}
/*############
Animations
#############*/
@keyframes flash {
  0% {
    filter:brightness(1.7);
  }
  100% {
    filter:auto;
  }
}
@keyframes expand {
  0% {
    transform:scale(0);
  }
  100% {
    transform:scale(1);
  }
}
@keyframes shake {
  0% { 
    --y-shake:1;
    --x-shake:0; 
  }
  10% { 
    --y-shake:0;
    --x-shake:1; 
  }
  20% { 
    --y-shake:-1;
    --x-shake:1; 
  }
  30% { 
    --y-shake:-1;
    --x-shake:0; 
  }
  40% { 
    --y-shake:0;
    --x-shake:-1; 
  }
  50% { 
    --y-shake:1;
    --x-shake:1; 
  }
  60% { 
    --y-shake:-1;
    --x-shake:1; 
  }
  70% { 
    --y-shake:1;
    --x-shake:0; 
  }
  80% { 
    --y-shake:0;
    --x-shake:0; 
  }
  90% { 
    --y-shake:0;
    --x-shake:1; 
  }
  100% { 
    --y-shake:1;
    --x-shake:-1; 
  }
}
@keyframes wobble {
  0% { --y-wobble:1 }
  25% { --y-wobble:0.5 }
  50% { --y-wobble:0 }
  75% { --y-wobble:-0.5 }
  100%  { --y-wobble:-1 }
}
@keyframes flicker {
  0% { opacity: var(--flicker-max); }
  2% { opacity: var(--flicker-min); }
  7% { opacity: var(--flicker-max); }
  7.5% { opacity: var(--flicker-min); }
  8% { opacity: var(--flicker-max); }
  9% { opacity: var(--flicker-min); }
  9.5% { opacity: var(--flicker-max); }
  10.5% { opacity: var(--flicker-min); }
  12% { opacity: var(--flicker-max); }
  25% { opacity: var(--flicker-min); }
  29% { opacity: var(--flicker-max); }
  29.5% { opacity: var(--flicker-min); }
  30% { opacity: var(--flicker-max); }
  35% { opacity: var(--flicker-min); }
  48% { opacity: var(--flicker-max); }
  55% { opacity: var(--flicker-min); }
  69% { opacity: var(--flicker-max); }
  73% { opacity: var(--flicker-min); }
  81% { opacity: var(--flicker-max); }
  81.5% { opacity: var(--flicker-min); }
  83% { opacity: var(--flicker-max); }
  83.5% { opacity: var(--flicker-min); }
  84% { opacity: var(--flicker-max); }
  85% { opacity: var(--flicker-min); }
  90% { opacity: var(--flicker-min); }
  93% { opacity: var(--flicker-max); }
  95% { opacity: var(--flicker-min); }
  95.5% { opacity: var(--flicker-max); }
  97% { opacity: var(--flicker-min); }
  100% { opacity: var(--flicker-max); }
}